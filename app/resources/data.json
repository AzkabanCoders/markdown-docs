{
  "data": {
    "app": {
      "name": "Webstore.styleguides",
      "logo": "/images/global/logo.svg",
      "cwd": "/Users/kfaria/Sites/walmart/reactdocs/",
      "src": "lib/sample",
      "filePattern": "**/*.md"
    },
    "data": [
      {
        "section": "Elements",
        "title": "buttons",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "contents": "<h1 id=\"an-h1-header\">An h1 header</h1>\n<p>Paragraphs are separated by a blank line.</p>\n<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code>monospace</code>. Itemized lists\nlook like:</p>\n<ul>\n<li>this one</li>\n<li>that one</li>\n<li>the other one</li>\n</ul>\n<p>Note that — not considering the asterisk — the actual text\ncontent starts at 4-columns in.</p>\n<blockquote>\n<p>Block quotes are\nwritten like so.</p>\n<p>They can span multiple paragraphs,\nif you like.</p>\n</blockquote>\n<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all\nin chapters 12–14”). Three dots … will be converted to an ellipsis.\nUnicode is supported. ☺</p>\n<h2 id=\"an-h2-header\">An h2 header</h2>\n<p>Here’s a numbered list:</p>\n<ol>\n<li>first item</li>\n<li>second item</li>\n<li>third item</li>\n</ol>\n<p>Note again how the actual text starts at 4 columns in (4 characters\nfrom the left side). Here’s a code sample:</p>\n<pre><code># Let me re-iterate ...\nfor i in 1 .. 10 { do-something(i) }\n</code></pre><p>As you probably guessed, indented 4 spaces. By the way, instead of\nindenting the block, you can use delimited blocks, if you like:</p>\n<pre><code>define foobar() {\n    print &quot;Welcome to flavor country!&quot;;\n}\n</code></pre><p>(which makes copying &amp; pasting easier). You can optionally mark the\ndelimited block for Pandoc to syntax highlight it:</p>\n<pre><code class=\"lang-python\">import time\n# Quick, count to ten!\nfor i in range(10):\n    # (but not *too* quick)\n    time.sleep(0.5)\n    print i\n</code></pre>\n<h3 id=\"an-h3-header\">An h3 header</h3>\n<p>Now a nested list:</p>\n<ol>\n<li><p>First, get these ingredients:</p>\n<ul>\n<li>carrots</li>\n<li>celery</li>\n<li>lentils</li>\n</ul>\n</li>\n<li><p>Boil some water.</p>\n</li>\n<li><p>Dump everything in the pot and follow\nthis algorithm:</p>\n<pre><code>find wooden spoon\nuncover pot\nstir\ncover pot\nbalance wooden spoon precariously on pot handle\nwait 10 minutes\ngoto first step (or shut off burner when done)\n</code></pre><p>Do not bump wooden spoon or it will fall.</p>\n</li>\n</ol>\n<p>Notice again how text always lines up on 4-space indents (including\nthat last line which continues item 3 above).</p>\n<p>Here’s a link to <a href=\"http://foo.bar\">a website</a>, to a <a href=\"local-doc.html\">local\ndoc</a>, and to a <a href=\"#an-h2-header\">section heading in the current\ndoc</a>. Here’s a footnote [^1].</p>\n<p>[^1]: Footnote text goes here.</p>\n<p>Tables can look like this:</p>\n<p>size  material      color</p>\n<hr>\n<p>9     leather       brown\n10    hemp canvas   natural\n11    glass         transparent</p>\n<p>Table: Shoes, their sizes, and what they’re made of</p>\n<p>(The above is the caption for the table.) Pandoc also supports\nmulti-line tables:</p>\n<hr>\n<p>keyword   text</p>\n<hr>\n<p>red       Sunsets, apples, and\n          other red or reddish\n          things.</p>\n<p>green     Leaves, grass, frogs\n          and other things it’s\n          not easy being.</p>\n<hr>\n<p>A horizontal rule follows.</p>\n<hr>\n<p>Here’s a definition list:</p>\n<p>apples\n  : Good for making applesauce.\noranges\n  : Citrus!\ntomatoes\n  : There’s no “e” in tomatoe.</p>\n<p>Again, text is indented 4 spaces. (Put a blank line between each\nterm/definition pair to spread things out more.)</p>\n<p>Here’s a “line block”:</p>\n<p>| Line one\n|   Line too\n| Line tree</p>\n<p>and images can be specified like so:</p>\n<p><img src=\"http://vignette2.wikia.nocookie.net/simpsons/images/c/c5/Homer_simpsonwoohooo.gif/revision/latest?cb=20131119164522\" alt=\"example image\" title=\"An exemplary image\"></p>\n<p>Inline math equations go in like so: $\\omega = d\\phi / dt$. Display\nmath should get its own line and be put in in double-dollarsigns:</p>\n<p>$$I = \\int \\rho R^{2} dV$$</p>\n<p>And note that you can backslash-escape any punctuation characters\nwhich you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p>\n",
        "id": "buttons"
      },
      {
        "section": "Elements",
        "title": "carousel",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "contents": "<p>My carousel <br> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam aspernatur et natus saepe fugiat, eligendi veniam temporibus accusamus molestiae expedita unde? Totam necessitatibus odit consequatur fugit voluptatem, accusamus qui, voluptas.</p>\n",
        "id": "carousel"
      },
      {
        "section": "Elements",
        "title": "icons",
        "sas": "sassa",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "lastUpdate": "2012-12-07T00:00:00.000Z",
        "contents": "<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam aspernatur et natus saepe fugiat, eligendi veniam temporibus accusamus molestiae expedita unde? Totam necessitatibus odit consequatur fugit voluptatem, accusamus qui, voluptas.</p>\n",
        "id": "icons"
      },
      {
        "section": "Elements",
        "title": "input",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "contents": "<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam aspernatur et natus saepe fugiat, eligendi veniam temporibus accusamus molestiae expedita unde? Totam necessitatibus odit consequatur fugit voluptatem, accusamus qui, voluptas.</p>\n",
        "id": "input"
      },
      {
        "section": "Globals",
        "title": "utils [js]",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "contents": "<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam aspernatur et natus saepe fugiat, eligendi veniam temporibus accusamus molestiae expedita unde? Totam necessitatibus odit consequatur fugit voluptatem, accusamus qui, voluptas.</p>\n",
        "id": "globals__js-utils"
      },
      {
        "section": "Globals",
        "title": "sass reset",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "contents": "<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam aspernatur et natus saepe fugiat, eligendi veniam temporibus accusamus molestiae expedita unde? Totam necessitatibus odit consequatur fugit voluptatem, accusamus qui, voluptas.</p>\n",
        "id": "globals__sass-reset"
      },
      {
        "section": "Globals",
        "title": "sass utils [scss]",
        "date": "2012-12-07T00:00:00.000Z",
        "device": "desktop, tablet",
        "contents": "<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ullam aspernatur et natus saepe fugiat, eligendi veniam temporibus accusamus molestiae expedita unde? Totam necessitatibus odit consequatur fugit voluptatem, accusamus qui, voluptas.</p>\n",
        "id": "globals__sass-utils"
      }
    ]
  }
}
